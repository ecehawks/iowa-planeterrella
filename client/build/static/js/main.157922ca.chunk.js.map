{"version":3,"sources":["NavBar.js","LandingPage.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","React","Component","LandingPage","voltage","airPressure","onVoltageChange","value","onAirPressureChange","_this$state","Container","Row","Col","md","class","Button","id","lib_default","min","max","tooltip","onChange","Footer","App","response","post","responseToPost","callApi","_callee","body","regenerator_default","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","handleSubmit","_callee2","e","_context2","preventDefault","method","headers","Content-Type","JSON","stringify","text","_this2","then","res","express","catch","err","console","log","_this3","NavBar_NavBar","LandingPage_LandingPage","onSubmit","type","target","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uWAWqBA,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACdA,EAAKU,MAAQ,CACTC,QAAQ,GAJGX,wEASfG,KAAKS,SAAS,CACZD,QAASR,KAAKO,MAAMC,0CAKtB,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,MAC7BN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAaC,KAAK,IAAIC,UAAU,IAC5BT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,WAEnBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAeC,QAASrB,KAAKI,SAC7BM,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAUd,OAAQR,KAAKO,MAAMC,OAAQe,QAAM,GACvCb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKL,UAAU,UAAUI,QAAM,GAC3Bb,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,WAAd,WAEJR,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,8BAAd,8BAEJR,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,yBAAd,yBAEJR,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,YAAd,uBAnCIS,IAAMC,oECJrBC,6MACjBtB,MAAQ,CACJuB,QAAS,EACTC,YAAa,KAGjBC,gBAAkB,SAACC,GACfpC,EAAKY,SAAS,CACVqB,QAASG,OAIjBC,oBAAsB,SAACD,GACnBpC,EAAKY,SAAS,CACVsB,YAAaE,6EAIX,IAAAE,EACyBnC,KAAKO,MAA9BuB,EADAK,EACAL,QAASC,EADTI,EACSJ,YAEf,OACIrB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gBACXT,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAWjB,UAAU,iBACjBT,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAKlB,UAAU,aACXT,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKnB,UAAU,YAAYoB,GAAI,GAC3B7B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,eACXT,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,UAEX9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,cACP9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,gBACP9B,EAAAC,EAAAC,cAAA,UAAQ4B,MAAM,eAAd,+CAKhB9B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKE,MAAM,cAAcD,GAAI,GACzB7B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,eACP9B,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,mBAAV,YACA9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,GAAG,WAAWvB,UAAU,eAAhC,QACAT,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,YACP9B,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,4BAAV,eACA9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,eACP9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,GAAG,aAAavB,UAAU,cAAlC,UACAT,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,GAAG,kBAAkBvB,UAAU,UAAvC,eACAT,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,GAAG,2BAA2BvB,UAAU,iBAAhD,yBAEJT,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,4BAAV,WACA9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,oBACP9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,cACP9B,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CACIiC,IAAK,EACLC,IAAK,IACLZ,MAAOH,EACPgB,SAAS,EACTC,SAAU/C,KAAKgC,gBACfb,UAAU,YAGlBT,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,gBAAgBV,EAA3B,OAEJpB,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,4BAAV,gBACA9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,oBACX9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,cACH9B,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CACIiC,IAAK,EACLC,IAAK,IACLZ,MAAOF,EACPe,SAAS,EACTC,SAAU/C,KAAKkC,oBACff,UAAU,YAGlBT,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,gBAAgBT,EAA3B,qBAzECJ,IAAMC,WCH1BoB,mLAEb,OACItC,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,kBACP9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,UACP9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,cACX9B,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,aAAV,oBACA9B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,eACP9B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAKG,MAAM,cACP9B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,GACL7B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,cAEf9B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,GACL7B,EAAAC,EAAAC,cAAA,KAAG4B,MAAM,eAAT,uTAEJ9B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKnB,UAAU,iBAAiBoB,GAAI,GAChC7B,EAAAC,EAAAC,cAAA,MAAI4B,MAAM,aAAV,cACA9B,EAAAC,EAAAC,cAAA,KAAGM,KAAK,sDAAsDsB,MAAM,eAApE,mCACA9B,EAAAC,EAAAC,cAAA,KAAGM,KAAK,+DAA+DsB,MAAM,eAA7E,sBACA9B,EAAAC,EAAAC,cAAA,KAAGM,KAAK,0CAA0CsB,MAAM,eAAxD,uBACA9B,EAAAC,EAAAC,cAAA,KAAGM,KAAK,mDAAmDsB,MAAM,eAAjE,kCApBIb,IAAMC,WCkE3BqB,6MA9Db1C,MAAQ,CACN2C,SAAU,GACVC,KAAM,GACNC,eAAgB,MASlBC,6BAAU,SAAAC,IAAA,IAAAJ,EAAAK,EAAA,OAAAC,EAAA7C,EAAA8C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACeC,MAAM,cADrB,cACFX,EADEQ,EAAAI,KAAAJ,EAAAE,KAAA,EAEWV,EAASa,OAFpB,UAEFR,EAFEG,EAAAI,KAGgB,MAApBZ,EAASc,OAHL,CAAAN,EAAAE,KAAA,cAG2BK,MAAMV,EAAKW,SAHtC,cAAAR,EAAAS,OAAA,SAIDZ,GAJC,wBAAAG,EAAAU,SAAAd,EAAAtD,WAOVqE,mDAAe,SAAAC,EAAMC,GAAN,IAAArB,EAAAK,EAAA,OAAAC,EAAA7C,EAAA8C,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cACbW,EAAEE,iBADWD,EAAAZ,KAAA,EAEUC,MAAM,aAAc,CACzCa,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBrB,KAAMsB,KAAKC,UAAU,CAAE3B,KAAMtD,EAAKU,MAAM4C,SAP7B,cAEPD,EAFOsB,EAAAV,KAAAU,EAAAZ,KAAA,EASMV,EAAS6B,OATf,OASPxB,EATOiB,EAAAV,KAUbjE,EAAKY,SAAS,CAAE2C,eAAgBG,IAVnB,wBAAAiB,EAAAJ,SAAAE,EAAAtE,kJAbK,IAAAgF,EAAAhF,KAClBA,KAAKqD,UACF4B,KAAK,SAAAC,GAAG,OAAIF,EAAKvE,SAAS,CAAEyC,SAAUgC,EAAIC,YAC1CC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAuBrB,IAAAG,EAAAxF,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAA,OAAKO,UAAU,wBACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,uBAEjBT,EAAAC,EAAAC,cAAC8E,EAAD,MAIAhF,EAAAC,EAAAC,cAAA,SAAIZ,KAAKO,MAAM2C,UACfxC,EAAAC,EAAAC,cAAA,QAAM+E,SAAU3F,KAAKqE,cACnB3D,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,SACEgF,KAAK,OACL3D,MAAOjC,KAAKO,MAAM4C,KAClBJ,SAAU,SAAAwB,GAAC,OAAIiB,EAAK/E,SAAS,CAAE0C,KAAMoB,EAAEsB,OAAO5D,WAEhDvB,EAAAC,EAAAC,cAAA,UAAQgF,KAAK,UAAb,WAEFlF,EAAAC,EAAAC,cAAA,SAAIZ,KAAKO,MAAM6C,gBACf1C,EAAAC,EAAAC,cAACkF,EAAD,cA1DUlE,aCMEmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.157922ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink } from 'reactstrap';\r\n\r\nexport default class NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props) ;\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"md\">\r\n                    <NavbarBrand href='/' className=''>\r\n                        <div className='brand'/>\r\n                    </NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink href=\"/aurora\">Aurora</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink href=\"/van-allen-radiation-belts\">Van Allen Radiation Belts</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink href=\"/stellar-ring-current\">Stellar Ring Current</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink href=\"/history\">History</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\n    \r\n\r\n","import React from 'react';\r\nimport Slider from 'react-rangeslider'\r\nimport 'react-rangeslider/lib/index.css'\r\nimport './App.css';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\n\r\nexport default class LandingPage extends React.Component {\r\n    state = {\r\n        voltage: 0,\r\n        airPressure: 0,\r\n    };\r\n\r\n    onVoltageChange = (value) => {\r\n        this.setState({\r\n            voltage: value\r\n        })\r\n    }\r\n\r\n    onAirPressureChange = (value) => {\r\n        this.setState({\r\n            airPressure: value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        let { voltage, airPressure } = this.state\r\n\r\n        return (\r\n            <div className='info-section'>\r\n                <Container className='video-section'>\r\n                    <Row className='video-row'>\r\n                        <Col className='video-col' md={9}>\r\n                            <div className='control-box'>\r\n                                <div class='video'>\r\n                                </div>\r\n                                <div class='queue-info'>\r\n                                    <div class='text-block-2'>\r\n                                        <strong class='bold-text-4'>Click Join to Control the Planeterrella</strong>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col class='control-col' md={3}>\r\n                            <div class='control-box'>\r\n                                <h2 class='heading control'>CONTROLS</h2>\r\n                                <Button id='join-btn' className='control-btn'>Join</Button>\r\n                                <div class='controls'>\r\n                                    <h4 class='control-selection-labels'>Select Mode</h4>\r\n                                    <div class='mode-select'>\r\n                                        <Button id='aurora-btn' className='button top'>Aurora</Button>\r\n                                        <Button id='aurora-lobe-btn' className='button'>Aurora Lobe</Button>\r\n                                        <Button id='stellar-ring-current-btn' className='button bottom'>Stellar Ring Current</Button>\r\n                                    </div>\r\n                                    <h4 class='control-selection-labels'>Voltage</h4>\r\n                                    <div class='slider-container'>\r\n                                        <div class='slider-box'>\r\n                                            <Slider\r\n                                                min={0}\r\n                                                max={800}\r\n                                                value={voltage}\r\n                                                tooltip={false}\r\n                                                onChange={this.onVoltageChange}\r\n                                                className='slider'\r\n                                            />  \r\n                                        </div>\r\n                                        <div class='text-block-3'>{voltage} V</div>\r\n                                    </div>\r\n                                    <h4 class='control-selection-labels'>Air Pressure</h4>\r\n                                    <div class='slider-container'>\r\n                                    <div class='slider-box'>\r\n                                            <Slider\r\n                                                min={0}\r\n                                                max={100}\r\n                                                value={airPressure}\r\n                                                tooltip={false}\r\n                                                onChange={this.onAirPressureChange}\r\n                                                className='slider'\r\n                                            />  \r\n                                        </div>\r\n                                        <div class='text-block-3'>{airPressure} Pa</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nexport default class Footer extends React.Component {\r\n    render () {\r\n        return (\r\n            <div class=\"footer-section\">\r\n                <div class=\"footer\">\r\n                    <div class=\"univ-logo\"></div>\r\n                    <h4 class=\"heading-3\">Acknowledgements</h4>\r\n                    <div class=\"footer-info\">\r\n                        <Row class=\"footer-row\">\r\n                            <Col md={2}>\r\n                                <div class=\"image-10\"/>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <p class=\"paragraph-3\">Construction of the Iowa Planeterrella was supported by the US National Science Foundation under grant No. PHY-1453736. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the view of the National Science Foundation.</p>\r\n                            </Col>\r\n                            <Col className='learn-more-col' md={6}>\r\n                                <h5 class=\"heading-4\">Learn More</h5>\r\n                                <a href=\"https://www2.physics.uiowa.edu/~sbaalrud/index.html\" class=\"footer-link\">Fundamental Plasma Theory Group</a>\r\n                                <a href=\"https://www2.physics.uiowa.edu/~sbaalrud/iplaneterrella.html\" class=\"footer-link\">Iowa Planeterrella</a>\r\n                                <a href=\"https://www.facebook.com/planeterrella/\" class=\"footer-link\">Like Us On Facebook</a>\r\n                                <a href=\"http://planeterrella.osug.fr/spip.php?article232\" class=\"footer-link\">All Planeterrellas</a>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\n    \r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport NavBar from './NavBar';\r\nimport LandingPage from './LandingPage';\r\nimport Footer from './Footer';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/hello');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n    return body;\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/world', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ post: this.state.post }),\r\n    });\r\n    const body = await response.text();\r\n    this.setState({ responseToPost: body });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <NavBar/>\r\n        <div className=\"planeterrella-banner\">\r\n          <div className=\"planeterrella-img\"></div>\r\n        </div>\r\n        <LandingPage/>\r\n        \r\n\r\n        \r\n        <p>{this.state.response}</p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <p>\r\n            <strong>Post to Server:</strong>\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.post}\r\n            onChange={e => this.setState({ post: e.target.value })}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        <p>{this.state.responseToPost}</p>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}